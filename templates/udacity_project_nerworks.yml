Description: |
  DevOps-ND-Project 2 - Deploy a high-availability web app using CloudFormation - Networks Resources

Parameters:
  VpcCIDR:
    Description: VPC CIDR
    Type: String
    Default: 10.0.0.0/16
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: ""
  PublicSubnet1CIDR:
    Description: The public subnet in the first Availability Zone CIDR
    Type: String
    Default: 10.0.0.0/24
  PublicSubnet2CIDR:
    Description: The public subnet in the second Availability Zone CIDR
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnet1CIDR:
    Description: The private subnet in the first Availability Zone CIDR
    Type: String
    Default: 10.0.2.0/24
  PrivateSubnet2CIDR:
    Description: The Private subnet in the second Availability Zone CIDR
    Type: String
    Default: 10.0.3.0/24

Resources:
  ### VPC, Internet Gateway, IGW attachment ###
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-VPC
        - Key: Service
          Value: !Sub ${EnvironmentName}
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-IGW
        - Key: Service
          Value: !Sub ${EnvironmentName}
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  ### Subnets ###
  # Public
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0 # AZ 1, index 0
        - Fn::GetAZs: !Ref "AWS::Region"
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Public-Routes-(AZ1)
        - Key: Service
          Value: !Sub ${EnvironmentName}
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1 # AZ 2, index 1
        - Fn::GetAZs: !Ref "AWS::Region"
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Public-Routes-(AZ2)
        - Key: Service
          Value: !Sub ${EnvironmentName}
  # Private
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref "AWS::Region"
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Private-Routes-(AZ1)
        - Key: Service
          Value: !Sub ${EnvironmentName}
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref "AWS::Region"
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Private-Routes-(AZ2)
        - Key: Service
          Value: !Sub ${EnvironmentName}
  ### Elastic IPs and NatGateways ###
  # Elastic IPs, reserve a constant public IP
  NatGatewayEIP1:
    Type: AWS::EC2::EIP
    DependsOn: VPCGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EIP-1
        - Key: Service
          Value: !Sub ${EnvironmentName}
  NatGatewayEIP2:
    Type: AWS::EC2::EIP
    DependsOn: VPCGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-EIP-2
        - Key: Service
          Value: !Sub ${EnvironmentName}
  # NatGateways
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-NatGW-1
        - Key: Service
          Value: !Sub ${EnvironmentName}
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-NatGW-2
        - Key: Service
          Value: !Sub ${EnvironmentName}
  ### RouteTables ###
  # RouteTable > Route > Table Association
  # Public
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Public-Routes
        - Key: Service
          Value: !Sub ${EnvironmentName}
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  # Private 1
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Private-Routes-(AZ1)
        - Key: Service
          Value: !Sub ${EnvironmentName}
  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Private-Routes-(AZ2)
        - Key: Service
          Value: !Sub ${EnvironmentName}
  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-VPCId

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [", ", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub ${EnvironmentName}-PUB-NETS
  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [", ", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: !Sub ${EnvironmentName}-PRIV-NETS

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PUB1-SN
  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PUB2-SN
  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PRI1-SN
  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PRI2-SN

  ElasticIPsAllocationId:
    Description: A list of the Nat gateways EIP IDs
    Value:
      !Join [
        ", ",
        [
          !GetAtt NatGatewayEIP1.AllocationId,
          !GetAtt NatGatewayEIP2.AllocationId,
        ],
      ]
    Export:
      Name: !Sub ${EnvironmentName}-NG-EIP-IDs
  ElasticIPsPublicIps:
    Description: A list of the Nat gateways EIP Public Ips
    Value:
      !Join [
        ", ",
        [!GetAtt NatGatewayEIP1.PublicIp, !GetAtt NatGatewayEIP2.PublicIp],
      ]
    Export:
      Name: !Sub ${EnvironmentName}-NG-EIP-IPs
